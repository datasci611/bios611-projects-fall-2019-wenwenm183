library(e1071)
par(mfrow=c(1, 2))
plot(density(client_info1$Number.of.Visits), main="Density Plot: Visits", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(client_info1$Number.of.Visits, 2))))
polygon(density(client_info1$Number.of.Visits), col="red")
plot(density(client_info1$year), main="Density Plot: Year", ylab="Frequency", sub=paste("Skewness:", round(e1071::skewness(client_info1$year), 2)))  # density plot for 'dist'
polygon(density(client_info1$year), col="red")
ggsave(filename = "../results/density.png", width = 6, height = 4)
install.packages("e1071", repos = "http://cran.us.r-project.org")
#fit a model and find the p-value
summary(lm(Number.of.Visits ~ year+Covered..Entry.+Client.Age.at.Entry+Client.Primary.Race+Client.Veteran.Status+Client.Gender,
data=client_info1))
#fit a model and find the p-value
summary(lm(Number.of.Visits ~ year+Covered..Entry.+Client.Age.at.Entry+Client.Primary.Race+Client.Veteran.Status+Client.Gender,
data=client_info1))
#fit a model and find the p-value
summary(lm(Number.of.Visits ~ year+Covered..Entry.+Client.Age.at.Entry+Client.Primary.Race+Client.Veteran.Status+Client.Gender,
data=client_info1))
#fit a model and find the p-value
summary(lm(Number.of.Visits ~ year+Covered..Entry.+Client.Age.at.Entry+Client.Primary.Race+Client.Veteran.Status+Client.Gender,
data=client_info1))
library(tidyverse)
library(ggplot2)
client_info <- read.csv("../data/final_project.csv",sep = ",",na.strings=c("","NA"))
getwd()
setwd("/Users/mwen/Documents/GitHub/bios611-projects-fall-2019-wenwenm183/project_3/scripts/")
client_info <- read.csv("../data/final_project.csv",sep = ",",na.strings=c("","NA"))
ggplot(client_info, aes(client_info$Covered..Entry.)) +
geom_bar(fill = "#0073C2FF")
ggplot(client_info, aes(client_info$Covered..Entry.)) +
geom_bar(fill = "#0073C2FF") +
theme_pubclean()
ggplot(client_info, aes(client_info$Covered..Entry.)) +
geom_bar(fill = "blue") +
labs(title="Histogram of Client Age", x="Client Age", y="Count",color='Gender')
ggplot(client_info, aes(client_info$Covered..Entry.)) +
geom_bar(fill = "blue") +
labs(title="Bar Plot of Health Insurancde", x="Health Insurance", y="Count")
ggplot(client_info, aes(client_info$Covered..Entry.)) +
geom_bar(fill = "blue") +
labs(title="Bar Plot of Health Insurancde", x="Health Insurance", y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(client_info, aes(client_info$Covered..Entry.)) +
geom_bar(fill = "blue") +
labs(title="Bar Plot of Health Insurance", x="Health Insurance", y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
ggplot(client_info, aes(client_info$Client.Veteran.Status)) +
geom_bar(fill = "red") +
labs(title="Bar Plot of Veteran Status", x="Veteran Insurance", y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(Client.Veteran.Status) == FALSE) %>%
ggplot(aes(Client.Veteran.Status)) +
geom_bar(fill = "red") +
labs(title="Bar Plot of Veteran Status", x="Veteran Insurance", y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Client.Primary.Race) == FALSE) %>%
ggplot(aes(Client.Primary.Race)) +
geom_bar(fill = "red") +
labs(title="Bar Plot of Veteran Status", x="Veteran Insurance", y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Client.Primary.Race) == FALSE) %>%
ggplot(aes(Client.Primary.Race)) +
geom_bar(fill = "red") +
labs(title="Bar Plot of Veteran Status", x="Veteran Insurance", y="Count") +
scale_x_discrete(labels=c("American Indian or Alaska Native (HUD)" = "AI/AN",
"Asian (HUD)" = "Asian",
"Black or African American (HUD)" = "AA",
"Client doesn't know (HUD)" = "DK",
"Client refused (HUD)" = "R",
"Data not collected (HUD)" = "N",
"Native Hawaiian or Other Pacific Islander (HUD)" = "NH/OPI",
"White (HUD)" = "C")) +
scale_color_manual(labels=c("AI/AN = American Indian or Alaska Native",
"Asian = Asian",
"AA = African America",
"DK = Client Doesn't Know",
"R = Client Refused",
"N = Data Not Collected",
"NH/OPI = Native Hawaiian or Other Pacific Islander",
"C = Caucasian"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Boxplot of Race vs. Number of Visits", x="Client Race",
y="Number of Visits") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Client.Primary.Race) == FALSE) %>%
ggplot(aes(Client.Primary.Race)) +
geom_histogram(fill = "red") +
labs(title="Bar Plot of Veteran Status", x="Veteran Insurance", y="Count") +
scale_x_discrete(labels=c("American Indian or Alaska Native (HUD)" = "AI/AN",
"Asian (HUD)" = "Asian",
"Black or African American (HUD)" = "AA",
"Client doesn't know (HUD)" = "DK",
"Client refused (HUD)" = "R",
"Data not collected (HUD)" = "N",
"Native Hawaiian or Other Pacific Islander (HUD)" = "NH/OPI",
"White (HUD)" = "C")) +
scale_color_manual(labels=c("AI/AN = American Indian or Alaska Native",
"Asian = Asian",
"AA = African America",
"DK = Client Doesn't Know",
"R = Client Refused",
"N = Data Not Collected",
"NH/OPI = Native Hawaiian or Other Pacific Islander",
"C = Caucasian"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Boxplot of Race vs. Number of Visits", x="Client Race",
y="Number of Visits") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Client.Primary.Race) == FALSE) %>%
ggplot(aes(Client.Primary.Race)) +
geom_histogram(fill = "red")
client_info %>% filter(is.na(Client.Primary.Race) == FALSE) %>%
ggplot( aes(x=Client.Primary.Race, y=Number.of.Visits, color=Client.Primary.Race)) +
geom_histogram() +
scale_x_discrete(labels=c("American Indian or Alaska Native (HUD)" = "AI/AN",
"Asian (HUD)" = "Asian",
"Black or African American (HUD)" = "AA",
"Client doesn't know (HUD)" = "DK",
"Client refused (HUD)" = "R",
"Data not collected (HUD)" = "N",
"Native Hawaiian or Other Pacific Islander (HUD)" = "NH/OPI",
"White (HUD)" = "C")) +
scale_color_manual(labels=c("AI/AN = American Indian or Alaska Native",
"Asian = Asian",
"AA = African America",
"DK = Client Doesn't Know",
"R = Client Refused",
"N = Data Not Collected",
"NH/OPI = Native Hawaiian or Other Pacific Islander",
"C = Caucasian"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Boxplot of Race vs. Number of Visits", x="Client Race",
y="Number of Visits") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(Client.Primary.Race) == FALSE) %>%
ggplot( aes(x=Client.Primary.Race, color=Client.Primary.Race)) +
geom_histogram() +
scale_x_discrete(labels=c("American Indian or Alaska Native (HUD)" = "AI/AN",
"Asian (HUD)" = "Asian",
"Black or African American (HUD)" = "AA",
"Client doesn't know (HUD)" = "DK",
"Client refused (HUD)" = "R",
"Data not collected (HUD)" = "N",
"Native Hawaiian or Other Pacific Islander (HUD)" = "NH/OPI",
"White (HUD)" = "C")) +
scale_color_manual(labels=c("AI/AN = American Indian or Alaska Native",
"Asian = Asian",
"AA = African America",
"DK = Client Doesn't Know",
"R = Client Refused",
"N = Data Not Collected",
"NH/OPI = Native Hawaiian or Other Pacific Islander",
"C = Caucasian"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Boxplot of Race vs. Number of Visits", x="Client Race",
y="Number of Visits") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(Client.Primary.Race) == FALSE) %>%
ggplot(aes(x=Client.Primary.Race, color=Client.Primary.Race)) +
geom_histogram()
client_info %>% filter(is.na(Client.Primary.Race) == FALSE) %>%
ggplot(aes(x=Client.Primary.Race, color=Client.Primary.Race)) +
geom_bar()
client_info %>% filter(is.na(Client.Primary.Race) == FALSE) %>%
ggplot(aes(x=Client.Primary.Race, color=Client.Primary.Race)) +
geom_bar() +
scale_x_discrete(labels=c("American Indian or Alaska Native (HUD)" = "AI/AN",
"Asian (HUD)" = "Asian",
"Black or African American (HUD)" = "AA",
"Client doesn't know (HUD)" = "DK",
"Client refused (HUD)" = "R",
"Data not collected (HUD)" = "N",
"Native Hawaiian or Other Pacific Islander (HUD)" = "NH/OPI",
"White (HUD)" = "C"))
client_info %>% filter(is.na(Client.Primary.Race) == FALSE) %>%
ggplot(aes(x=Client.Primary.Race, color=Client.Primary.Race)) +
geom_bar() +
scale_x_discrete(labels=c("American Indian or Alaska Native (HUD)" = "AI/AN",
"Asian (HUD)" = "Asian",
"Black or African American (HUD)" = "AA",
"Client doesn't know (HUD)" = "DK",
"Client refused (HUD)" = "R",
"Data not collected (HUD)" = "N",
"Native Hawaiian or Other Pacific Islander (HUD)" = "NH/OPI",
"White (HUD)" = "C")) +
scale_color_manual(labels=c("AI/AN = American Indian or Alaska Native",
"Asian = Asian",
"AA = African America",
"DK = Client Doesn't Know",
"R = Client Refused",
"N = Data Not Collected",
"NH/OPI = Native Hawaiian or Other Pacific Islander",
"C = Caucasian"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Bar plot of Client Race", x="Client Race",
y="Count) +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(Client.Primary.Race) == FALSE) %>%
ggplot(aes(x=Client.Primary.Race, color=Client.Primary.Race)) +
geom_bar() +
scale_x_discrete(labels=c("American Indian or Alaska Native (HUD)" = "AI/AN",
"Asian (HUD)" = "Asian",
"Black or African American (HUD)" = "AA",
"Client doesn't know (HUD)" = "DK",
"Client refused (HUD)" = "R",
"Data not collected (HUD)" = "N",
"Native Hawaiian or Other Pacific Islander (HUD)" = "NH/OPI",
"White (HUD)" = "C")) +
scale_color_manual(labels=c("AI/AN = American Indian or Alaska Native",
"Asian = Asian",
"AA = African America",
"DK = Client Doesn't Know",
"R = Client Refused",
"N = Data Not Collected",
"NH/OPI = Native Hawaiian or Other Pacific Islander",
"C = Caucasian"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Bar plot of Client Race", x="Client Race",
y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Covered..Entry.) == FALSE) %>%
ggplot() +
geom_bar(aes(x=Covered..Entry.=as.factor(Client.Primary.Race)))
client_info %>% filter(is.na(client_info$Covered..Entry.) == FALSE) %>%
ggplot() +
geom_bar(aes(x=Covered..Entry., fill=as.factor(Client.Primary.Race)))
client_info %>% filter(is.na(client_info$Covered..Entry.) == FALSE) %>%
ggplot() +
geom_bar(aes(x=Covered..Entry., fill=as.factor(Client.Primary.Race))) +
labs(title="Barplot of Health Insurance ", x="Health Insurance Status",
y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Covered..Entry.) == FALSE) %>%
ggplot() +
geom_bar(aes(x=Covered..Entry., fill=as.factor(Number.of.Visits))) +
labs(title="Barplot of Health Insurance ", x="Health Insurance Status",
y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Covered..Entry.) == FALSE) %>%
ggplot() +
geom_bar(aes(x=Covered..Entry., fill=as.factor(Client.Veteran.Status))) +
labs(title="Barplot of Health Insurance ", x="Health Insurance Status",
y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Covered..Entry.) == FALSE & is.na(client_info$Client.Veteran.Status) == FALSE) %>%
ggplot() +
geom_bar(aes(x=Covered..Entry., fill=as.factor(Client.Veteran.Status))) +
labs(title="Barplot of Health Insurance ", x="Health Insurance Status",
y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(client_info$Covered..Entry.) == FALSE & is.na(client_info$Client.Veteran.Status) == FALSE) %>%
ggplot() +
geom_bar(aes(x=Covered..Entry., fill=as.factor(Client.Veteran.Status))) +
labs(title="Barplot of Health Insurance and Veteran Status ", x="Health Insurance Status",
y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
summary(lm(Number.of.Visits ~ year+Covered..Entry.+Client.Age.at.Entry+Client.Primary.Race+Client.Veteran.Status+Client.Gender,
data=client_info1))
summary(lm(Number.of.Visits ~ year+Covered..Entry.+Client.Age.at.Entry+Client.Primary.Race+Client.Veteran.Status+Client.Gender,
data=client_info1))
a= summary(lm(Number.of.Visits ~ year+Covered..Entry.+Client.Age.at.Entry+Client.Primary.Race+Client.Veteran.Status+Client.Gender,
data=client_info1))
a
data.frame(a)
client_info %>% filter(is.na(year) == FALSE) %>%
ggplot(aes(year)) +
geom_bar(fill = "red") +
labs(title="Bar Plot of Veteran Status", x="Veteran Insurance", y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(year) == FALSE) %>%
ggplot(aes(year)) +
geom_bar(fill = "red") +
labs(title="Bar Plot of Clients per year", x="year", y="Number of Clients") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>% filter(is.na(year) == FALSE) %>%
ggplot(aes(year)) +
geom_bar(fill = "purple") +
labs(title="Bar Plot of Clients per year", x="year", y="Number of Clients") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
View(client_info)
client_info %>% filter(client_info$Covered..Entry. =="yes")
client_info %>% filter(client_info$Covered..Entry. =="Yes")
client_info %>% filter(client_info$Covered..Entry. =="Yes") %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple")
summary(client_info$Health.Insurance.Type..Entry.)
client_info %>% filter(client_info$Covered..Entry. =="Yes" & is.na(Health.Insurance.Type..Entry.) == FALSE)) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple")
client_info %>% filter(client_info$Covered..Entry. =="Yes" && is.na(Health.Insurance.Type..Entry.) == FALSE)) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple")
client_info %>% filter(Covered..Entry. =="Yes") %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE)) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple")
client_info %>% filter(client_info$Covered..Entry. =="Yes") %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple")
client_info %>% filter(client_info$Covered..Entry. =="Yes") %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE)) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple")
client_info %>% filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE)) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple")
client_info %>% filter(is.na(Health.Insurance.Type..Entry.) == FALSE))
client_info %>% filter(is.na(Health.Insurance.Type..Entry.) == FALSE)
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE)
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry.))
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple")
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple") +
scale_x_discrete(labels=c("Employer - Provided Health Insurance" = "Emp",
"Indian Health Services Program " = "IHSP",
"MEDICAID " = "Medicaid",
"MEDICARE" = "Medicare",
"Other" = "Other",
"Private Pay Health Insurance" = "Private",
"State Children's Health Insurance Program" = "SC",
"State Health Insurance for Adults" = "SA",
"Veteran's Administration (VA) Medical Services"="VA"))
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(fill = "purple") +
scale_x_discrete(labels=c("Employer - Provided Health Insurance" = "Emp",
"Indian Health Services Program " = "IHSP",
"MEDICAID " = "Medicaid",
"MEDICARE" = "Medicare",
"Other" = "Other",
"Private Pay Health Insurance" = "Private",
"State Children's Health Insurance Program" = "SC",
"State Health Insurance for Adults" = "SA",
"Veteran's Administration (VA) Medical Services"="VA")) +
scale_color_manual(labels=c("AI/AN = American Indian or Alaska Native",
"Asian = Asian",
"AA = African America",
"DK = Client Doesn't Know",
"R = Client Refused",
"N = Data Not Collected",
"NH/OPI = Native Hawaiian or Other Pacific Islander",
"C = Caucasian"
)
)
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry.)) +
geom_bar(color=Health.Insurance.Type..Entry.) +
scale_x_discrete(labels=c("Employer - Provided Health Insurance" = "Emp",
"Indian Health Services Program " = "IHSP",
"MEDICAID " = "Medicaid",
"MEDICARE" = "Medicare",
"Other" = "Other",
"Private Pay Health Insurance" = "Private",
"State Children's Health Insurance Program" = "SC",
"State Health Insurance for Adults" = "SA",
"Veteran's Administration (VA) Medical Services"="VA")) +
scale_color_manual(labels=c("Employer - Provided Health Insurance",
"Indian Health Services Program",
"MEDICAID",
"MEDICARE",
"Other",
"Private Pay Health Insurance",
"State Children's Health Insurance Program",
"State Health Insurance for Adults",
"Veteran's Administration (VA) Medical Services"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7", "#f4a122",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Boxplot of Race vs. Number of Visits", x="Client Race",
y="Number of Visits") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry., color=Health.Insurance.Type..Entry.)) +
geom_bar() +
scale_x_discrete(labels=c("Employer - Provided Health Insurance" = "Emp",
"Indian Health Services Program " = "IHSP",
"MEDICAID " = "Medicaid",
"MEDICARE" = "Medicare",
"Other" = "Other",
"Private Pay Health Insurance" = "Private",
"State Children's Health Insurance Program" = "SC",
"State Health Insurance for Adults" = "SA",
"Veteran's Administration (VA) Medical Services"="VA")) +
scale_color_manual(labels=c("Employer - Provided Health Insurance",
"Indian Health Services Program",
"MEDICAID",
"MEDICARE",
"Other",
"Private Pay Health Insurance",
"State Children's Health Insurance Program",
"State Health Insurance for Adults",
"Veteran's Administration (VA) Medical Services"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7", "#f4a122",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Boxplot of Race vs. Number of Visits", x="Client Race",
y="Number of Visits") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry., color=Health.Insurance.Type..Entry.)) +
geom_bar(fill="white") +
scale_x_discrete(labels=c("Employer - Provided Health Insurance" = "Emp",
"Indian Health Services Program " = "IHSP",
"MEDICAID " = "Medicaid",
"MEDICARE" = "Medicare",
"Other" = "Other",
"Private Pay Health Insurance" = "Private",
"State Children's Health Insurance Program" = "SC",
"State Health Insurance for Adults" = "SA",
"Veteran's Administration (VA) Medical Services"="VA")) +
scale_color_manual(labels=c("Employer - Provided Health Insurance",
"Indian Health Services Program",
"MEDICAID",
"MEDICARE",
"Other",
"Private Pay Health Insurance",
"State Children's Health Insurance Program",
"State Health Insurance for Adults",
"Veteran's Administration (VA) Medical Services"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7", "#f4a122",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Bar Plot of Type of Insurance for Clients with Health Insurance", x="Type of Insurance",
y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry., color=Health.Insurance.Type..Entry.)) +
geom_bar(fill="white")
client_info %>%
filter(client_info$Covered..Entry. =="Yes") %>% data.frame() %>%
filter(is.na(Health.Insurance.Type..Entry.) == FALSE) %>%
ggplot(aes(Health.Insurance.Type..Entry., color=Health.Insurance.Type..Entry.)) +
geom_bar(fill="white") +
scale_x_discrete(labels=c("Employer - Provided Health Insurance" = "Emp",
"MEDICAID " = "Medicaid",
"MEDICARE" = "Medicare",
"Other" = "Other",
"Private Pay Health Insurance" = "Private",
"State Children's Health Insurance Program" = "SC",
"State Health Insurance for Adults" = "SA",
"Veteran's Administration (VA) Medical Services"="VA")) +
scale_color_manual(labels=c("Employer - Provided Health Insurance",
"MEDICAID",
"MEDICARE",
"Other",
"Private Pay Health Insurance",
"State Children's Health Insurance Program",
"State Health Insurance for Adults",
"Veteran's Administration (VA) Medical Services"
),
values=c("#b2182b", "#d6604d","#f4a582", "#fddbc7",
"#d1e5f0", "#92c5de", "#4393c3", "#2166ac")) +
labs(title="Bar Plot of Type of Insurance for Clients with Health Insurance", x="Type of Insurance",
y="Count") +
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))
